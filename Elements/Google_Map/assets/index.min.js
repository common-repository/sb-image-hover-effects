var SaGoogleMap = function ($scope, $) {
    window.saelHasMapAPI = window.google ? window.google : undefined;

    if (!window.saelHasMapAPI) {
        var $map_class = $scope.find(".sa-el-google-map").eq(0),
                $map_notice = $scope.find(".google-map-notice").eq(0);

        $map_class.css("display", "none");

        $map_notice.html(
                "Whoops! It' seems like you didn't set Google Map API key. You can set from <b> Elementor Addons > Elements > Google Map (Settings)</b>"
                );
        $map_notice.addClass("alert alert-warning");
        $map_notice.css({
            "background-color": "#f2dede",
            color: "#a94442",
            "font-size": "85%",
            padding: "15px",
            "border-radius": "3px"
        });
    } else {
        var $map = $scope.find(".sa-el-google-map"),
                $thisMap = $("#" + $map.attr("id")),
                $mapID = $thisMap.data("id"),
                $mapType = $thisMap.data("map_type"),
                $mapAddressType = $thisMap.data("map_address_type"),
                $mapLat = $thisMap.data("map_lat"),
                $mapLng = $thisMap.data("map_lng"),
                $mapAddr = $thisMap.data("map_addr"),
                $mapBasicMarkerTitle = $thisMap.data("map_basic_marker_title"),
                $mapBasicMarkerContent = $thisMap.data("map_basic_marker_content"),
                $mapBasicMarkerIconEnable = $thisMap.data(
                        "map_basic_marker_icon_enable"
                        ),
                $mapBasicMarkerIcon = $thisMap.data("map_basic_marker_icon"),
                $mapBasicMarkerIconWidth = $thisMap.data(
                        "map_basic_marker_icon_width"
                        ),
                $mapBasicMarkerIconHeight = $thisMap.data(
                        "map_basic_marker_icon_height"
                        ),
                $mapZoom = $thisMap.data("map_zoom"),
                $mapMarkerContent = $thisMap.data("map_marker_content"),
                $mapMarkers = $thisMap.data("map_markers"),
                $mapStaticWidth = $thisMap.data("map_static_width"),
                $mapStaticHeight = $thisMap.data("map_static_height"),
                $mapStaticLat = $thisMap.data("map_static_lat"),
                $mapStaticLng = $thisMap.data("map_static_lng"),
                $mapPolylines = $thisMap.data("map_polylines"),
                $mapStrokeColor = $thisMap.data("map_stroke_color"),
                $mapStrokeOpacity = $thisMap.data("map_stroke_opacity"),
                $mapStrokeWeight = $thisMap.data("map_stroke_weight"),
                $mapStrokeFillColor = $thisMap.data("map_stroke_fill_color"),
                $mapStrokeFillOpacity = $thisMap.data("map_stroke_fill_opacity"),
                $mapOverlayContent = $thisMap.data("map_overlay_content"),
                $mapRoutesOriginLat = $thisMap.data("map_routes_origin_lat"),
                $mapRoutesOriginLng = $thisMap.data("map_routes_origin_lng"),
                $mapRoutesDestLat = $thisMap.data("map_routes_dest_lat"),
                $mapRoutesDestLng = $thisMap.data("map_routes_dest_lng"),
                $mapRoutesTravelMode = $thisMap.data("map_routes_travel_mode"),
                $mapPanoramaLat = $thisMap.data("map_panorama_lat"),
                $mapPanoramaLng = $thisMap.data("map_panorama_lng"),
                $mapTheme = JSON.parse(
                        decodeURIComponent(
                                ($thisMap.data("map_theme") + "").replace(/\+/g, "%20")
                                )
                        ),
                $map_streeview_control = $thisMap.data("map_streeview_control"),
                $map_type_control = $thisMap.data("map_type_control"),
                $map_zoom_control = $thisMap.data("map_zoom_control"),
                $map_fullscreen_control = $thisMap.data("map_fullscreen_control"),
                $map_scroll_zoom = $thisMap.data("map_scroll_zoom");

        var saelMapHeader = new GMaps({
            el: "#sa-el-google-map-" + $mapID,
            lat: $mapLat,
            lng: $mapLng,
            zoom: $mapZoom,
            streetViewControl: $map_streeview_control,
            mapTypeControl: $map_type_control,
            zoomControl: $map_zoom_control,
            fullscreenControl: $map_fullscreen_control,
            scrollwheel: $map_scroll_zoom
        });

        if ($mapTheme != "") {
            saelMapHeader.addStyle({
                styledMapName: "Styled Map",
                styles: JSON.parse($mapTheme),
                mapTypeId: "map_style"
            });

            saelMapHeader.setStyle("map_style");
        }

        if ("basic" == $mapType) {
            var infoWindowHolder =
                    $mapBasicMarkerContent != ""
                    ? {content: $mapBasicMarkerContent}
            : "";

            if ($mapBasicMarkerIconEnable == "yes") {
                var iconHolder = {
                    url: $mapBasicMarkerIcon,
                    scaledSize: new google.maps.Size(
                            $mapBasicMarkerIconWidth,
                            $mapBasicMarkerIconHeight
                            )
                };
            } else {
                var iconHolder = null;
            }

            if ($mapAddressType == "address") {
                GMaps.geocode({
                    address: $mapAddr,
                    callback: function (results, status) {
                        if (status == "OK") {
                            var latlng = results[0].geometry.location;
                            saelMapHeader.setCenter(latlng.lat(), latlng.lng());
                            saelMapHeader.addMarker({
                                lat: latlng.lat(),
                                lng: latlng.lng(),
                                title: $mapBasicMarkerTitle,
                                infoWindow: infoWindowHolder,
                                icon: iconHolder
                            });
                        }
                    }
                });
            } else if ($mapAddressType == "coordinates") {
                saelMapHeader.addMarker({
                    lat: $mapLat,
                    lng: $mapLng,
                    title: $mapBasicMarkerTitle,
                    infoWindow: infoWindowHolder,
                    icon: iconHolder
                });
            }
        }


        if ("marker" == $mapType) {
            var $data = JSON.parse(
                    decodeURIComponent(($mapMarkers + "").replace(/\+/g, "%20"))
                    );

            if ($data.length > 0) {
                var MarkersMap = new GMaps({
                    el: "#sa-el-google-map-" + $mapID,
                    lat: $data[0].sa_el_google_map_marker_lat,
                    lng: $data[0].sa_el_google_map_marker_lng,
                    zoom: $mapZoom,
                    streetViewControl: $map_streeview_control,
                    mapTypeControl: $map_type_control,
                    zoomControl: $map_zoom_control,
                    fullscreenControl: $map_fullscreen_control,
                    scrollwheel: $map_scroll_zoom
                });

                MarkersMap.setCenter(
                        $data[0].sa_el_google_map_marker_lat,
                        $data[0].sa_el_google_map_marker_lng
                        );

                if ($mapTheme != "") {
                    MarkersMap.addStyle({
                        styledMapName: "Styled Map",
                        styles: JSON.parse($mapTheme),
                        mapTypeId: "map_style"
                    });

                    MarkersMap.setStyle("map_style");
                }

                $data.forEach(function ($marker) {
                    if ($marker.sa_el_google_map_marker_content != "") {
                        var infoWindowHolder = {
                            content: $marker.sa_el_google_map_marker_content
                        };
                    } else {
                        var infoWindowHolder = "";
                    }

                    if ($marker.sa_el_google_map_marker_icon_enable == "yes") {
                        var iconHolder = {
                            url: $marker.sa_el_google_map_marker_icon.url,
                            scaledSize: new google.maps.Size(
                                    $marker.sa_el_google_map_marker_icon_width,
                                    $marker.sa_el_google_map_marker_icon_height
                                    )
                        };
                    } else {
                        var iconHolder = "";
                    }

                    MarkersMap.addMarker({
                        lat: parseFloat($marker.sa_el_google_map_marker_lat),
                        lng: parseFloat($marker.sa_el_google_map_marker_lng),
                        title: $marker.sa_el_google_map_marker_title,
                        infoWindow: infoWindowHolder,
                        icon: iconHolder
                    });
                });
            }
        }

        if ("static" == $mapType) {
            var $data = JSON.parse(
                    decodeURIComponent(($mapMarkers + "").replace(/\+/g, "%20"))
                    ),
                    markersHolder = [];

            if ($data.length > 0) {
                $data.forEach(function ($marker) {
                    markersHolder.push({
                        lat: parseFloat($marker.sa_el_google_map_marker_lat),
                        lng: parseFloat($marker.sa_el_google_map_marker_lng),
                        color: $marker.sa_el_google_map_marker_icon_color
                    });
                });
            }

            var saelStaticMapUrl = GMaps.staticMapURL({
                size: [$mapStaticWidth, $mapStaticHeight],
                lat: $mapStaticLat,
                lng: $mapStaticLng,
                markers: markersHolder
            });

            $("<img />")
                    .attr("src", saelStaticMapUrl)
                    .appendTo("#sa-el-google-map-" + $mapID);
        }

        if ("polyline" == $mapType) {
            var $polylines_data = JSON.parse(
                    decodeURIComponent(
                            ($mapPolylines + "").replace(/\+/g, "%20")
                            )
                    ),
                    $data = JSON.parse(
                            decodeURIComponent(($mapMarkers + "").replace(/\+/g, "%20"))
                            ),
                    $sa_el_polylines = [];

            var saelPolylineMap = new GMaps({
                el: "#sa-el-google-map-" + $mapID,
                lat: $mapLat,
                lng: $mapLng,
                zoom: $mapZoom,
                center: {
                    lat: -12.07635776902266,
                    lng: -77.02792530422971
                }
            });

            $polylines_data.forEach(function ($polyline) {
                $sa_el_polylines.push([
                    parseFloat($polyline.sa_el_google_map_polyline_lat),
                    parseFloat($polyline.sa_el_google_map_polyline_lng)
                ]);
            });

            var path = JSON.parse(JSON.stringify($sa_el_polylines));

            saelPolylineMap.drawPolyline({
                path: path,
                strokeColor: $mapStrokeColor.toString(),
                strokeOpacity: $mapStrokeOpacity,
                strokeWeight: $mapStrokeWeight
            });

            $data.forEach(function ($marker) {
                if ($marker.sa_el_google_map_marker_content != "") {
                    var infoWindowHolder = {
                        content: $marker.sa_el_google_map_marker_content
                    };
                } else {
                    var infoWindowHolder = "";
                }

                if ($marker.sa_el_google_map_marker_icon_enable == "yes") {
                    var iconHolder = {
                        url: $marker.sa_el_google_map_marker_icon.url,
                        scaledSize: new google.maps.Size(
                                $marker.sa_el_google_map_marker_icon_width,
                                $marker.sa_el_google_map_marker_icon_height
                                )
                    };
                } else {
                    var iconHolder = "";
                }

                saelPolylineMap.addMarker({
                    lat: $marker.sa_el_google_map_marker_lat,
                    lng: $marker.sa_el_google_map_marker_lng,
                    title: $marker.sa_el_google_map_marker_title,
                    infoWindow: infoWindowHolder,
                    icon: iconHolder
                });
            });

            if ($mapTheme != "") {
                saelPolylineMap.addStyle({
                    styledMapName: "Styled Map",
                    styles: JSON.parse($mapTheme),
                    mapTypeId: "polyline_map_style"
                });

                saelPolylineMap.setStyle("polyline_map_style");
            }
        }

        if ("polygon" == $mapType) {
            var $polylines_data = JSON.parse(
                    decodeURIComponent(
                            ($mapPolylines + "").replace(/\+/g, "%20")
                            )
                    ),
                    $sa_el_polylines = [];

            $polylines_data.forEach(function ($polyline) {
                $sa_el_polylines.push([
                    parseFloat($polyline.sa_el_google_map_polyline_lat),
                    parseFloat($polyline.sa_el_google_map_polyline_lng)
                ]);
            });

            var path = JSON.parse(JSON.stringify($sa_el_polylines));
            saelMapHeader.drawPolygon({
                paths: path,
                strokeColor: $mapStrokeColor.toString(),
                strokeOpacity: $mapStrokeOpacity,
                strokeWeight: $mapStrokeWeight,
                fillColor: $mapStrokeFillColor.toString(),
                fillOpacity: $mapStrokeFillOpacity
            });
        }

        if ("overlay" == $mapType) {
            if ($mapOverlayContent != "") {
                var contentHolder =
                        '<div class="sa-el-gmap-overlay">' +
                        $mapOverlayContent +
                        "</div>";
            } else {
                var contentHolder = "";
            }

            saelMapHeader.drawOverlay({
                lat: $mapLat,
                lng: $mapLng,
                content: contentHolder
            });
        }

        if ("routes" == $mapType) {
            saelMapHeader.drawRoute({
                origin: [$mapRoutesOriginLat, $mapRoutesOriginLng],
                destination: [$mapRoutesDestLat, $mapRoutesDestLng],
                travelMode: $mapRoutesTravelMode.toString(),
                strokeColor: $mapStrokeColor.toString(),
                strokeOpacity: $mapStrokeOpacity,
                strokeWeight: $mapStrokeWeight
            });

            var $data = JSON.parse(
                    decodeURIComponent(($mapMarkers + "").replace(/\+/g, "%20"))
                    );

            if ($data.length > 0) {
                $data.forEach(function ($marker) {
                    if ($marker.sa_el_google_map_marker_content != "") {
                        var infoWindowHolder = {
                            content: $marker.sa_el_google_map_marker_content
                        };
                    } else {
                        var infoWindowHolder = "";
                    }

                    if ($marker.sa_el_google_map_marker_icon_enable == "yes") {
                        var iconHolder = {
                            url: $marker.sa_el_google_map_marker_icon.url,
                            scaledSize: new google.maps.Size(
                                    $marker.sa_el_google_map_marker_icon_width,
                                    $marker.sa_el_google_map_marker_icon_height
                                    )
                        };
                    } else {
                        var iconHolder = "";
                    }

                    saelMapHeader.addMarker({
                        lat: $marker.sa_el_google_map_marker_lat,
                        lng: $marker.sa_el_google_map_marker_lng,
                        title: $marker.sa_el_google_map_marker_title,
                        infoWindow: infoWindowHolder,
                        icon: iconHolder
                    });
                });
            }
        }

        if ("panorama" == $mapType) {
            var saelPanorama = GMaps.createPanorama({
                el: "#sa-el-google-map-" + $mapID,
                lat: $mapPanoramaLat,
                lng: $mapPanoramaLng
            });
        }
    }
};

jQuery(window).on("elementor/frontend/init", function () {
    elementorFrontend.hooks.addAction(
            "frontend/element_ready/sa_el_google_map.default",
            SaGoogleMap
            );
});
