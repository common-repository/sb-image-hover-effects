var SA_BG_TRANSITION = function ($scope, $) {

    var scrollElement = $scope.find('.sa-el-scroll-background'),
            settings = scrollElement.data('settings'),
            currentDevice = elementorFrontend.getCurrentDeviceMode(),
            $window = $(window),
            offset = null,
            isSolid = true;


    var elements = settings.elements,
            downColors = settings.down_colors,
            upColors = settings.up_colors,
            itemsIDs = settings.itemsIDs,
            id = settings.id;

    var $firstElement = $('#' + elements[ 0 ]),
            $lastElement = $('#' + elements[ elements.length - 1 ]),
            firstElemOffset = $firstElement.offset().top,
            lastElemOffset = $lastElement.offset().top,
            lastElemeHeight = $lastElement.outerHeight(),
            lastElemeBot = lastElemOffset + lastElemeHeight;

    offset = 'offset' + ('desktop' === currentDevice ? '' : '_' + currentDevice);

    if ('' === settings[ offset ])
        offset = 'offset';

    $('<div id="sa-el-color-transition-' + id + '" class="sa-el-color-transition"></div>').prependTo($('body'));

    $window.on('DOMContentLoaded', function () {
        if ($('.sa-el-color-transition').length > 1)
            $window.on('scroll', checkVisible);
    });

    function checkVisible() {

        if (undefined === firstElemOffset || undefined === lastElemOffset)
            return;

        if ($window.scrollTop() >= lastElemeBot - lastElemeHeight / 4) {
            var index = $('#sa-el-color-transition-' + id).index();
            if (0 !== index)
                $('#sa-el-color-transition-' + id).addClass('sa-el-bg-transition-hidden');

        }
        if (($window.scrollTop() >= firstElemOffset) && ($window.scrollTop() < lastElemOffset)) {
            $('#sa-el-color-transition-' + id).removeClass('sa-el-bg-transition-hidden');
        }
    }

    function visible(selector, partial, hidden) {
        var s = selector.get(0),
                vpHeight = $window.outerHeight(),
                clientSize =
                hidden === true ? s.offsetWidth * s.offsetHeight : true;
        if (typeof s.getBoundingClientRect === "function") {
            var rec = s.getBoundingClientRect();
            var tViz = rec.top >= 0 && rec.top < vpHeight,
                    bViz = rec.bottom > 0 && rec.bottom <= vpHeight,
                    vVisible = partial ? tViz || bViz : tViz && bViz,
                    vVisible =
                    rec.top < 0 && rec.bottom > vpHeight ? true : vVisible;
            return clientSize && vVisible;
        } else {
            var viewTop = 0,
                    viewBottom = viewTop + vpHeight,
                    position = $window.position(),
                    _top = position.top,
                    _bottom = _top + $window.height(),
                    compareTop = partial === true ? _bottom : _top,
                    compareBottom = partial === true ? _top : _bottom;
            return (
                    !!clientSize &&
                    (compareBottom <= viewBottom && compareTop >= viewTop)
                    );
        }
    }

    downColors.forEach(function (color) {
        if (-1 !== color.indexOf('//'))
            isSolid = false;
    });

    if (isSolid) {

        function rowTransitionalColor($row, firstColor, secondColor) {
            "use strict";

            var firstColor = hexToRgb(firstColor),
                    secondColor = hexToRgb(secondColor);

            var scrollPos = 0, currentRow = $row, beginningColor = firstColor, endingColor = secondColor, percentScrolled, newRed, newGreen, newBlue, newColor;

            $(document).scroll(function () {
                var animationBeginPos = currentRow.offset().top,
                        endPart = currentRow.outerHeight() / 4,
                        animationEndPos = animationBeginPos + currentRow.outerHeight() - endPart;

                scrollPos = $(this).scrollTop();

                if (scrollPos >= animationBeginPos && scrollPos <= animationEndPos) {
                    percentScrolled = (scrollPos - animationBeginPos) / (currentRow.outerHeight() - endPart);
                    newRed = Math.abs(beginningColor.r + (endingColor.r - beginningColor.r) * percentScrolled);
                    newGreen = Math.abs(beginningColor.g + (endingColor.g - beginningColor.g) * percentScrolled);
                    newBlue = Math.abs(beginningColor.b + (endingColor.b - beginningColor.b) * percentScrolled);

                    newColor = "rgb(" + newRed + "," + newGreen + "," + newBlue + ")";

                    $('#sa-el-color-transition-' + id).css({
                        backgroundColor: newColor
                    });

                } else if (scrollPos > animationEndPos) {
                    $('#sa-el-color-transition-' + id).css({
                        backgroundColor: endingColor
                    });
                }
            });
        }

        function hexToRgb(hex) {
            var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
            return result ? {
                r: parseInt(result[ 1 ], 16),
                g: parseInt(result[ 2 ], 16),
                b: parseInt(result[ 3 ], 16)
            } : null;
        }

        $('#sa-el-color-transition-' + id).css({
            backgroundColor: downColors[ 0 ]
        });

        var parent_node = $("#sa-el-color-transition-" + id).closest(".elementor");

        if (0 === parent_node.length)
            parent_node = $(".elementor").first();

        var i = 0;
        var arry_len = downColors.length;
        var isLooped = null;

        parent_node.find(".elementor-section-wrap > .elementor-element").each(function () {
            if (arry_len <= i)
                i = 0;

            var firstColor = i,
                    secondColor = i + 1;

            if (downColors[ firstColor ] !== '' && downColors[ firstColor ] != undefined) {
                firstColor = downColors[ firstColor ];
            }
            if (downColors[ secondColor ] !== '' && downColors[ secondColor ] != undefined) {
                isLooped = false;
                secondColor = downColors[ secondColor ];
            } else {
                i = 0;
                isLooped = true;
                secondColor = i;
                secondColor = downColors[ secondColor ];
            }

            rowTransitionalColor($(this), firstColor, secondColor);
            if (!isLooped)
                i++;
        });

    } else {
        Waypoint.refreshAll();
        elements.forEach(function (element, index) {

            $('<div class="sa-el-color-transition-layer elementor-repeater-item-' + itemsIDs[ index ] + '" data-direction="down"></div>').prependTo($('#sa-el-color-transition-' + id));

            $('<div class="sa-el-color-transition-layer elementor-repeater-item-' + itemsIDs[ index ] + '" data-direction="up"></div>').prependTo($('#sa-el-color-transition-' + id));

            if (visible($('#' + element), true))
                $('.elementor-repeater-item-' + itemsIDs[ index ] + '[data-direction="down"]').addClass('layer-active');

            elementorFrontend.waypoint(
                    $('#' + element),
                    function (direction) {

                        if ('down' === direction) {
                            $('.sa-el-color-transition-layer').removeClass('layer-active');
                            $('.elementor-repeater-item-' + itemsIDs[ index ] + '[data-direction="down"]').addClass('layer-active');
                        }
                    },
                    {
                        offset: (0 === index) ? '100%' : settings [ offset ],
                        triggerOnce: false
                    }
            );

            elementorFrontend.waypoint(
                    $('#' + element),
                    function (direction) {
                        if ('up' === direction) {
                            if (index === (elements.length - 1)) {
                                var upBackground = $('.elementor-repeater-item-' + itemsIDs[ index ] + '[data-direction="up"]').css("background-image"),
                                        downBackground = $('.elementor-repeater-item-' + itemsIDs[ index ] + '[data-direction="down"]').css("background-image");

                                if (upBackground !== downBackground) {

                                    $('.sa-el-color-transition-layer').removeClass('layer-active');
                                    $('.elementor-repeater-item-' + itemsIDs[ index ] + '[data-direction="up"]').addClass('layer-active');
                                }
                            } else {
                                $('.sa-el-color-transition-layer').removeClass('layer-active');
                                $('.elementor-repeater-item-' + itemsIDs[ index ] + '[data-direction="up"]').addClass('layer-active');
                            }

                        }
                    },
                    {
                        offset: -1 * settings[ offset ],
                        triggerOnce: false
                    }
            );

        });

    }

};
jQuery(window).on("elementor/frontend/init", function () {
    elementorFrontend.hooks.addAction(
            "frontend/element_ready/sa_el_background_transition.default",
            SA_BG_TRANSITION
            );
});