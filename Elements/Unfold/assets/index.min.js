var SAUnfoldHandler = function ($scope, $) {
    var SAunfoldElement = $scope.find(".sa-el-unfold-wrap"),
            unfoldSettings = SAunfoldElement.data("settings"),
            contentHeight = parseInt(
                    SAunfoldElement.find(".sa-el-unfold-editor-content").outerHeight()
                    );

    if (unfoldSettings["foldSelect"] == "percent") {
        var foldHeight = (unfoldSettings["foldHeight"] / 100) * contentHeight;
    } else if (unfoldSettings["foldSelect"] == "pixel") {
        var foldHeight = unfoldSettings["foldHeight"];
    }
    SAunfoldElement
            .find(".sa-el-unfold-button-text")
            .text(unfoldSettings["foldText"]);
    SAunfoldElement.find(".sa-el-unfold-content").css({height: foldHeight});
    SAunfoldElement
            .find(".sa-el-button i")
            .addClass(unfoldSettings["buttonUnfoldIcon"]);

    SAunfoldElement.find(".sa-el-button").click(function (e) {
        e.preventDefault();
        if (SAunfoldElement.find(".sa-el-unfold-content").hasClass("toggled")) {
            contentHeight = parseInt(
                    SAunfoldElement.find(".sa-el-unfold-editor-content").outerHeight()
                    );
            SAunfoldElement
                    .find(".sa-el-unfold-button-text")
                    .text(unfoldSettings["unfoldText"]);
            SAunfoldElement
                    .find(".sa-el-unfold-content")
                    .animate(
                            {height: contentHeight},
                            unfoldSettings["unfoldDur"],
                            unfoldSettings["unfoldEase"]
                            )
                    .removeClass("toggled");
            SAunfoldElement.find(".sa-el-unfold-gradient").toggleClass("toggled");
            SAunfoldElement
                    .find(".sa-el-button i")
                    .removeClass(unfoldSettings["buttonUnfoldIcon"])
                    .addClass(unfoldSettings["buttonIcon"]);
        } else {
            SAunfoldElement
                    .find(".sa-el-unfold-button-text")
                    .text(unfoldSettings["foldText"]);
            SAunfoldElement
                    .find(".sa-el-unfold-content")
                    .animate(
                            {height: foldHeight},
                            unfoldSettings["foldDur"],
                            unfoldSettings["foldEase"]
                            )
                    .addClass("toggled");
            SAunfoldElement.find(".sa-el-unfold-gradient").toggleClass("toggled");
            SAunfoldElement
                    .find(".sa-el-button i")
                    .removeClass(unfoldSettings["buttonIcon"])
                    .addClass(unfoldSettings["buttonUnfoldIcon"]);
        }
    });
};

jQuery(window).on("elementor/frontend/init", function () {

    elementorFrontend.hooks.addAction(
            "frontend/element_ready/sa_el_unfold.default",
            SAUnfoldHandler
            );
});