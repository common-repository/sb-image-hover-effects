var SAELParticles = function ($scope, $) {
    var sectionId = $scope.data('id'),
            particle_switch = $scope.data('sa_particle_enable');


    if (typeof particle_switch == undefined || particle_switch != undefined && particle_switch == false)
        return;


    var preset_theme = $scope.data('sa_el_preset_theme'),
            custom_style = $scope.data('sa_el_custom_style'),
            source = $scope.data('sa_el_ptheme_source'),
            settings;

    if (source === 'custom' && source === '')
        return;

    $scope.addClass('sa-el-particles-section');

    if (window.isEditMode) {
        var editorElements = null,
                particleArgs = {},
                settings = {};

        if (!window.elementor.hasOwnProperty('elements')) {
            return false;
        }
        editorElements = window.elementor.elements;

        if (!editorElements.models) {
            return false;
        }
        $.each(editorElements.models, function (i, e) {
            if (sectionId === e.id) {
                particleArgs = e.attributes.settings.attributes;
            } else if (e.id === $scope.closest('.elementor-top-section').data('id')) {
                $.each(e.attributes.elements.models, function (i, col) {
                    $.each(col.attributes.elements.models, function (i, subSec) {
                        particleArgs = subSec.attributes.settings.attributes;
                    });
                });
            }
        });
        settings.switch = particleArgs['sa_el_particle_switch'];
        settings.themeSource = particleArgs['sa_el_particle_theme_from'];
        console.log(settings.themeSource);
        if (settings.themeSource === 'presets') {
            $.get(window.ElementorAddons.restapi + 'particle/particle_render/', '', function (output) {
                var theme = JSON.parse(output);
                settings.selected_theme = (theme[particleArgs['sa_el_particle_preset_themes']]);
            });
        }
        if ((settings.themeSource === 'custom') && ('' !== particleArgs['sa_el_particles_custom_style'])) {
            settings.selected_theme = particleArgs['sa_el_particles_custom_style'];
        }
        if (0 !== settings.length) {
            settings = settings;
        }
    } else {
        $.get(window.ElementorAddons.restapi + 'particle/particle_render/', '', function (output) {
            var th = JSON.parse(output);
            var the = (custom_style != '' ? custom_style : th[preset_theme]);
            particlesJS('sa-el-section-particles-' + sectionId, the);
        });
    }
    if (!window.isEditMode || !settings) {
        return false;
    }
    if (settings.switch == 'yes') {
        if (settings.themeSource === 'presets' || (settings.themeSource === 'custom' && '' !== settings.selected_theme)) {
            $scope.attr('id', 'sa-el-section-particles-' + sectionId);
            if (typeof particlesJS !== 'undefined' && $.isFunction(particlesJS)) {
                particlesJS("sa-el-section-particles-" + sectionId, settings.selected_theme);
                $scope.children('canvas.particles-js-canvas-el').css({
                    position: 'absolute',
                    top: 0
                });
            }
        }
    } else {
        $scope.removeClass('sa-el-particles-section');
    }
};

jQuery(window).on('elementor/frontend/init', function () {
    elementorFrontend.hooks.addAction(
            'frontend/element_ready/section', SAELParticles
            );
});
